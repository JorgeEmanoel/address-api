{
  "openapi": "3.0.0",
  "info": {
    "title": "Address API",
    "version": "1.0.0",
    "description": "Gerenciamento de endere√ßos <eu.jorge.emanoell@gmail.com>.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Main server"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Application auth"
    },
    {
      "name": "user",
      "description": "Authenticated user's data"
    },
    {
      "name": "addresses",
      "description": "User's addresses"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/HttpBadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/HttpBadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/auth/data": {
      "get": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Account details",
        "responses": {
          "200": {
            "description": "Account details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/User"
                    },
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Address"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authorization"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Update account data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/HttpBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authorization"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete account and its addresses",
        "responses": {
          "200": {
            "description": "Account deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authorization token"
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "List the user's addresses",
        "parameters": [
          {
            "name": "neightborhood",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Addresses list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Address"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missin or invalid authorization token"
          }
        }
      },
      "post": {
        "tags": [
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Create a new address",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "$ref": "#/components/schemas/Address"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid sent data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/HttpBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Missin or invalid authorization token"
          }
        }
      }
    },
    "/addresses/{id}": {
      "get": {
        "tags": [
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authorization token"
          },
          "404": {
            "description": "Address not found"
          }
        }
      },
      "put": {
        "tags": [
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/AddressData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authorization token"
          },
          "404": {
            "description": "Address not found"
          }
        }
      },
      "delete": {
        "tags": [
          "addresses"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authorization token"
          },
          "404": {
            "description": "Address not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "ValidationError": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "HttpBadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "number"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "neightborhood": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "id": {
            "type": "number"
          }
        }
      },
      "AddressData": {
        "type": "object",
        "properties": {
          "neightborhood": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          }
        }
      }
    }
  }
}